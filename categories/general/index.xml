<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>general on Sebastian Aigner</title><link>https://sebi.io/categories/general/</link><description>Recent content in general on Sebastian Aigner</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 11 Mar 2021 19:33:57 +0000</lastBuildDate><atom:link href="https://sebi.io/categories/general/index.xml" rel="self" type="application/rss+xml"/><item><title>Kotlin Standard Library Safari: Strings</title><link>https://sebi.io/posts/2021-03-11-kotlin-stdlib-safari-strings/</link><pubDate>Thu, 11 Mar 2021 19:33:57 +0000</pubDate><guid>https://sebi.io/posts/2021-03-11-kotlin-stdlib-safari-strings/</guid><description>This blog post accompanies the first episode of our YouTube series &amp;ldquo;Kotlin Standard Library Safari&amp;rdquo;, which you can find on the official Kotlin YouTube channel, or watch here directly!
What&amp;rsquo;s Kotlin Standard Library Safari? In the &amp;ldquo;Kotlin Standard Library Safari&amp;rdquo; series, we’re going through the useful functionality the standard library in Kotlin has to offer, one subject at a time. In the process, we’re hopefully going to unearth some hidden gems together, which will come in handy the next time you write Kotlin code.</description></item><item><title>Tips and tricks for your Kotlin code explorations</title><link>https://sebi.io/posts/2021-03-03-tips-and-trick-for-kotlin-code-explorations/</link><pubDate>Wed, 03 Mar 2021 15:33:57 +0000</pubDate><guid>https://sebi.io/posts/2021-03-03-tips-and-trick-for-kotlin-code-explorations/</guid><description>This blog post accompanies a video from our YouTube series which you can find on our Kotlin YouTube channel, or watch here directly!
We’re going to take a look at some handy tips and tricks to help you explore Kotlin code, no matter whether it&amp;rsquo;s your own code or the code from the Kotlin standard library or any of your other dependencies. They will equip you to discover some of the goodies in the code you’re working with on your own.</description></item><item><title>Hosting Kotlin/JS on GitHub Pages via GitHub Actions</title><link>https://sebi.io/posts/2021-02-05-hosting-kotlin-js-on-github-pages/</link><pubDate>Fri, 05 Feb 2021 19:33:57 +0000</pubDate><guid>https://sebi.io/posts/2021-02-05-hosting-kotlin-js-on-github-pages/</guid><description>GitHub Pages is an easy way to host your Kotlin/JS application - and in combination with the continuous integration service GitHub Actions, you can easily set up a smooth development (and deployment!) experience for your projects. Read on to learn how you can build and test your application on GitHub&amp;rsquo;s CI, and get your Kotlin/JS web apps published for free.
In this post, we are going to configure GitHub Actions and Pages so that new code pushed to our repository or added via pull request is automatically validated (by having the project built and our tests run on GitHub&amp;rsquo;s servers), and code pushed to the main branch of our project is automatically made available to the public (by generating and publishing production artifacts of our app).</description></item><item><title>Deploying server-side Kotlin Ktor applications on Dokku</title><link>https://sebi.io/posts/2021-01-15-deploying-server-side-kotlin-ktor-applications-on-dokku/</link><pubDate>Fri, 15 Jan 2021 19:33:57 +0000</pubDate><guid>https://sebi.io/posts/2021-01-15-deploying-server-side-kotlin-ktor-applications-on-dokku/</guid><description>In my last article, I talked about “[Publishing server-side Kotlin applications built with Ktor on Heroku]({% post_url 2021-01-15-Kotlin-on-heroku %})”. I really like Heroku as a place to host my Kotlin apps because the time from setting up my application to having it available to the public is very short – I can confidently get my prototype applications running in the cloud in less than 10 minutes, and even if I need a database or integration with some other service, it can be spun up in mere minutes.</description></item><item><title>Kotlin, Ktor and Exposed on Heroku</title><link>https://sebi.io/posts/2021-01-15-kotlin-on-heroku/</link><pubDate>Fri, 15 Jan 2021 09:16:31 +0000</pubDate><guid>https://sebi.io/posts/2021-01-15-kotlin-on-heroku/</guid><description>Getting an application into the hands of the first users is the best feeling. Seeing them try out an app for the first time and collecting feedback from them for future improvement has always felt very rewarding to me. For server-side apps, this usually means getting the app deployed somewhere – published on the web.
Today I want to share one quick way to get Kotlin applications built with Ktor onto the web: Using Heroku.</description></item><item><title>Running Create-React-Kotlin-App on Heroku</title><link>https://sebi.io/posts/2018-09-10-running-create-react-kotlin-app-on-heroku/</link><pubDate>Mon, 10 Sep 2018 19:33:57 +0000</pubDate><guid>https://sebi.io/posts/2018-09-10-running-create-react-kotlin-app-on-heroku/</guid><description>(This post is a tutorialized version of the workarounds that I worked out together with Andrey Skladchikov in this YouTrack issue for CRKA.)
As the name might suggest, create-react-kotlin-app (CRKA) is the Kotlin equivalent of JavaScript&amp;rsquo;s create-react-app: A wonderful little tool to automate all the webpack and configuration stuff for your React/Kotlin application, having you focus completely on the actual application logic.
Getting create-react-kotlin-app to run on Heroku, however, is not without its pitfalls.</description></item><item><title>Developing for Raspberry Pi using IntelliJ Deployment</title><link>https://sebi.io/posts/2018-08-13-developing-for-raspberry-pi/</link><pubDate>Mon, 13 Aug 2018 16:17:02 +0000</pubDate><guid>https://sebi.io/posts/2018-08-13-developing-for-raspberry-pi/</guid><description>So a few days ago I published the Thermal-Kotlin library which allows use of thermal printers in conjunction with a Raspberry Pi. That library and the way I developed it will get its own article soon, but I wanted to pick out one part that was particularily interesting for me: Automatic Deployment using IntelliJ.
When prototyping the library, I had to run it on the Raspberry Pi often, in order to figure out the exact workings of the protocol used by the printer and even try out timings that wouldn&amp;rsquo;t prevent the printer&amp;rsquo;s buffer from overflowing.</description></item><item><title>Fixing PAGE_FAULT_IN_NONPAGED_AREA after Windows 10 Creators Update</title><link>https://sebi.io/posts/2018-07-16-how-to-fix-page_fault_in_nonpaged_area/</link><pubDate>Mon, 16 Jul 2018 21:26:55 +0000</pubDate><guid>https://sebi.io/posts/2018-07-16-how-to-fix-page_fault_in_nonpaged_area/</guid><description>After the last unsolicited update from Microsoft, the Creators Update for 2018, instead of a seamless upgrade, I was greeted by
PAGE_FAULT_IN_NONPAGED AREA. Cause of Error: SbieDrv.Sys
This was combined with Windows frantically trying to restart multiple times, trying to roll back the changes it had made, all to no avail. As I was sitting in front of the computer, beeping with every restart, I started researching on my phone in order to take matters into my own hands.</description></item><item><title>Hexagonal Grids</title><link>https://sebi.io/posts/2018-01-04-hexagonal-coordinate-systems/</link><pubDate>Thu, 04 Jan 2018 01:23:43 +0000</pubDate><guid>https://sebi.io/posts/2018-01-04-hexagonal-coordinate-systems/</guid><description>I was spending one of the recent days in the Loretta Bar here in Munich together with Alex, and we worked on a few tasks of the 2017 edition of Advent of Code. I was infatuated with the last task we worked on, the Day 11 challenge. You are supposed to find the distance of a position in a Hex Grid based on a path description. I had already read a few articles regarding hexagonal grids, because I feel it is one of the less intuitive data structures, but none of them really made me understand the topic extremely well.</description></item><item><title>Making my Fire HD 10 a YouTube machine</title><link>https://sebi.io/posts/2017-12-30-making-my-kindle-hd-10-a-youtube-machine/</link><pubDate>Sat, 30 Dec 2017 22:53:34 +0000</pubDate><guid>https://sebi.io/posts/2017-12-30-making-my-kindle-hd-10-a-youtube-machine/</guid><description>T&amp;rsquo;was the night of the 24th of december, I was sitting together with my family at my grandparent&amp;rsquo;s house and celebrated Christmas - and the Christkind blessed me with a Fire HD 10 Tablet, freshly made by Amazon (or whoever manufactures these things). It should serve as a replacement device for my Sony Xperia Tablet Z which unfortunately had an unplanned rendezvous with the floor.
So I set out to make this thing my classic YouTube watching machine that I was used to before.</description></item></channel></rss>