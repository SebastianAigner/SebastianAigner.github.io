<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>100daysofcode on Sebastian Aigner</title><link>https://sebi.io/tags/100daysofcode/</link><description>Recent content in 100daysofcode on Sebastian Aigner</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 01 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://sebi.io/tags/100daysofcode/index.xml" rel="self" type="application/rss+xml"/><item><title>Idiomatic Kotlin: Solving Advent of Code Puzzles, Passport Validation</title><link>https://sebi.io/posts/2021-09-1-idiomatic-kotlin-advent-of-code-password-validation/</link><pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate><guid>https://sebi.io/posts/2021-09-1-idiomatic-kotlin-advent-of-code-password-validation/</guid><description>Today in “Idiomatic Kotlin”, we’re looking at day 4 of the Advent of Code 2020 challenges, in which we tackle a problem that feels as old as programming itself: input sanitization and validation.
Day 4. Passport processing We need to build a passport scanner that, given a batch of input text, can count how many passports are valid. You can find the complete task description at https://adventofcode.com/2020/day/4.
Like many challenges, we first inspect our input:</description></item></channel></rss>